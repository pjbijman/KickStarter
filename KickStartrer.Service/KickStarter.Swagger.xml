<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KickStartrer.Service</name>
    </assembly>
    <members>
        <member name="T:KickStartrer.Service.ClientModels.PersonModel">
            <summary>
            Ckient person Model
            </summary>
        </member>
        <member name="P:KickStartrer.Service.ClientModels.PersonModel.Id">
            <summary>
            Gets or sets the person identifier.
            </summary>
            <value>The person identifier.</value>
        </member>
        <member name="P:KickStartrer.Service.ClientModels.PersonModel.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
            <value>The first name.</value>
        </member>
        <member name="P:KickStartrer.Service.ClientModels.PersonModel.MiddleName">
            <summary>
            Gets or sets the name of the middle.
            </summary>
            <value>The name of the middle.</value>
        </member>
        <member name="P:KickStartrer.Service.ClientModels.PersonModel.Insertion">
            <summary>
            Gets or sets the insertion.
            </summary>
            <value>The insertion.</value>
        </member>
        <member name="P:KickStartrer.Service.ClientModels.PersonModel.LastName">
            <summary>
            Gets or sets the last name.
            </summary>
            <value>The last name.</value>
        </member>
        <member name="P:KickStartrer.Service.ClientModels.PersonModel.Suffix">
            <summary>
            Gets or sets the suffix.
            </summary>
            <value>The suffix.</value>
        </member>
        <member name="P:KickStartrer.Service.ClientModels.PersonModel.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>The suffix.</value>
        </member>
        <member name="P:KickStartrer.Service.ClientModels.PersonModel.Gender">
            <summary>
            Gets or sets the gender.
            </summary>
            <value>The gender.</value>
        </member>
        <member name="P:KickStartrer.Service.ClientModels.PersonModel.DateOfBirth">
            <summary>
            Gets or sets the date of birth.
            </summary>
            <value>The date of birth.</value>
        </member>
        <member name="P:KickStartrer.Service.ClientModels.PersonModel.SocialSegurityNumber">
            <summary>
            Gets or sets the social segurity number.
            </summary>
            <value>The social segurity number.</value>
        </member>
        <member name="P:KickStartrer.Service.ClientModels.PersonModel.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <value>The image.</value>
        </member>
        <member name="M:KickStartrer.Service.Controllers.api.PersonController.#ctor(System.Lazy{KickStarter.BusinessLayer.Components.Interfaces.IGetPersonsComponent},System.Lazy{KickStarter.BusinessLayer.Components.Interfaces.ISavePersonComponent},System.Lazy{KickStarter.BusinessLayer.Components.Interfaces.IDeletePersonComponent})">
            <summary>
            PersonController constructor
            </summary>
            <param name="getPersonComponent"></param>
            <param name="savePersonComponent"></param>
            <param name="deletePersonComponent"></param>
        </member>
        <member name="M:KickStartrer.Service.Controllers.api.PersonController.GetPersonById(System.Guid)">
            <summary>
            Fetches a Person by its Id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:KickStartrer.Service.Controllers.api.PersonController.GetPersonsAsync">
            <summary>
            Fetches a list of all Persons
            </summary>
            <returns></returns>
        </member>
        <member name="M:KickStartrer.Service.Controllers.api.PersonController.SavePerson(KickStartrer.Service.ClientModels.PersonModel)">
            <summary>
            Saves a Personn to the repository.
            </summary>
            <param name="personSave"></param>
            <returns></returns>
        </member>
        <member name="M:KickStartrer.Service.Controllers.api.PersonController.DeletePerson(System.Guid)">
            <summary>
            Deletes a person from the repository.
            </summary>
            <param name="personId"></param>
            <returns></returns>
        </member>
        <member name="T:KickStartrer.Service.Conversions.PersonModelToPersonTypeConverter">
            <summary>
            Converts a PersonModel to a person Object
            </summary>
        </member>
        <member name="M:KickStartrer.Service.Conversions.PersonModelToPersonTypeConverter.Convert(KickStartrer.Service.ClientModels.PersonModel,KickStarter.Library.Entities.Person,AutoMapper.ResolutionContext)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="destination"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:KickStartrer.Service.Helpers.ApiExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
                Catches the exceptions from api requests
            </summary>
        </member>
        <member name="T:KickStartrer.Service.Helpers.Appsettings">
            <summary>
            Application setiings storage
            </summary>
        </member>
        <member name="P:KickStartrer.Service.Helpers.Appsettings.ConnectionStrings">
            <summary>
            Stores the connection string.
            </summary>
        </member>
        <member name="T:KickStartrer.Service.Helpers.ConnectionStrings">
            <summary>
            Connection string storage.
            </summary>
        </member>
        <member name="P:KickStartrer.Service.Helpers.ConnectionStrings.DefaultConnection">
            <summary>
            Stores the default connection.
            </summary>
        </member>
        <member name="M:KickStartrer.Service.Helpers.Utils.GetErrorMessage(System.Exception,System.Boolean)">
            <summary>
                Returns a string containing all errormessages for the specified exception and its inner exceptions
            </summary>
        </member>
        <member name="M:KickStartrer.Service.Helpers.Utils.GetErrorMessage(System.Exception)">
            <summary>
                Returns a string containing all type- message and stacktrace info for the specified exception and its inner
                exceptions
            </summary>
        </member>
        <member name="M:KickStartrer.Service.Helpers.Utils.ConvertToBytes(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
                Converts IFormFile to bytearray
            </summary>
        </member>
        <member name="M:KickStartrer.Service.Helpers.Utils.GetErrorMessage(System.Exception,System.Boolean,System.Text.StringBuilder@)">
            <summary>
                Loops through all inner Exceptions and assembles the error text in a stringbuilder
            </summary>
        </member>
        <member name="T:KickStarter.Service.Startup">
            <summary>
            Startup of the application
            </summary>
        </member>
        <member name="M:KickStarter.Service.Startup.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Startpoint Application
            </summary>
            <param name="env"></param>
        </member>
        <member name="P:KickStarter.Service.Startup.Configuration">
            <summary>
            Holds the Configuration
            </summary>
        </member>
        <member name="M:KickStarter.Service.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:KickStarter.Service.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>        
        </member>
    </members>
</doc>
